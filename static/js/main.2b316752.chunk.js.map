{"version":3,"sources":["Components/Table/newContact/NewContact.module.css","Components/Table/Search/Search.module.css","App.module.css","Components/paginator/Pagination.module.css","Components/Table/Table.module.css","Components/Redux/table-reducer.ts","Components/Array.ts","Components/Table/newContact/NewContact.tsx","Components/paginator/Pagination.tsx","Components/Table/Search/Search.tsx","Components/Table/TableBigListOfContacts.tsx","App.tsx","reportWebVitals.js","Components/Redux/Store.ts","index.tsx"],"names":["module","exports","initialState","input","id","name","position","email","array","modalForNewContact","currentPage","postPerPage","setNewArrAC","type","SET_NEW_ARR","setInputAC","value","SET_INPUT","setModalForNewContactAC","SET_MODAL_FOR_NEW_CONTACT","SET_ADD_NEW_CONTACT","SET_CURRENT_PAGE","positions","label","NewContact","props","dispatch","useDispatch","isOpen","style","customStyles","contentLabel","className","info","btnContainer","btnClose","onClick","par","textFiledContainer","TextField","color","textFields","variant","margin","placeholder","cont","dataCreated","onChange","e","setCont","target","select","event","helperText","map","option","MenuItem","password","tel","Button","btn","disabled","length","newContact","Paginator","useState","portionNumber","setPortionNumber","portionCount","totalPosts","postsPerPage","pageNumbers","i","Math","ceil","push","leftPortionPageNumber","rightPortionPageNumber","filter","p","number","paginate","page","Search","container","boxes","currentTarget","onKeyPress","key","setValue","content","width","height","top","left","right","bottom","marginRight","transform","zindex","TableBigListOfContacts","useSelector","state","table","newArr","indexOfLastPost","indexOfFirstPost","currentPost","slice","newFilteredArr","el","Number","filteredContacts","toLowerCase","match","newClassName","tableForHover","myTableHeader","box1","headerName","box2","box3","box4","box5","box6","box7","myTable","emailInfo","footer","paginator","pageNumber","setCurrentPageAC","btnAddCont","App","styles","newContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","floor","random","store","createStore","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b316752.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"NewContact_info__9w9jC\",\"par\":\"NewContact_par__FmJGB\",\"textFiledContainer\":\"NewContact_textFiledContainer__2pgFX\",\"textFields\":\"NewContact_textFields__1jrmS\",\"btnContainer\":\"NewContact_btnContainer__1FUnn\",\"btnClose\":\"NewContact_btnClose__369im\",\"btn\":\"NewContact_btn__22Tsc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"Search_info__3TDNX\",\"container\":\"Search_container__acb-l\",\"boxes\":\"Search_boxes__3ZaG6\",\"textFields\":\"Search_textFields__12Oa7\",\"btn\":\"Search_btn__2HrPL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"newContainer\":\"App_newContainer__2of63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"Pagination_pagination__13DD0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Table_container__3ZKdR\",\"headerName\":\"Table_headerName__21EZq\",\"myTableHeader\":\"Table_myTableHeader__3RyyJ\",\"myTable\":\"Table_myTable__3zrOv\",\"types\":\"Table_types__Lc1_n\",\"error\":\"Table_error__3Zy0b\",\"box1\":\"Table_box1__22Fg_\",\"box2\":\"Table_box2__3eLkU\",\"box3\":\"Table_box3__yzWnD\",\"box4\":\"Table_box4__3h2vX\",\"box5\":\"Table_box5__3bESR\",\"emailInfo\":\"Table_emailInfo__j0DhN\",\"box6\":\"Table_box6__J3DKp\",\"box7\":\"Table_box7__1oE_i\",\"buttonOff\":\"Table_buttonOff__WdV62\",\"buttonOn\":\"Table_buttonOn__PEUcF\",\"errorEmail\":\"Table_errorEmail__3FtJ2\",\"filterContacts\":\"Table_filterContacts__2_3-J\",\"info\":\"Table_info__1J28m\",\"footer\":\"Table_footer__3fFuL\",\"paginator\":\"Table_paginator__3eUtw\",\"btnAddCont\":\"Table_btnAddCont__2p7M_\"};","import {defArr} from \"../Array\";\n\nexport type SearchinType = {\n    id:number | string,\n    name:string\n    position:string\n    email:string\n}\nlet initialState = {\n    input: {\n        id:'',\n        name:'',\n        position:'',\n        email:''\n    } as SearchinType,\n    array: defArr as Array<defArrType>,\n    modalForNewContact: false,\n    currentPage: 1,\n    postPerPage: 5,\n\n\n\n\n}\n\n\nexport function tableReducer(state: InitialStateType = initialState, action: AllACTypes): InitialStateType {\n    switch (action.type) {\n        case SET_NEW_ARR:\n            return {...state, array: action.array}\n        case SET_INPUT:\n            return {...state, input: action.value}\n        case SET_ADD_NEW_CONTACT:\n            const newContact = {\n                dataCreated: action.newContact.dataCreated,\n                id: Math.floor(Math.random() * 1000),\n                name: action.newContact.name,\n                position: action.newContact.position,\n                email: action.newContact.email,\n                password: action.newContact.password,\n                tel: action.newContact.tel,\n            }\n            return {\n                ...state,\n                array: [newContact, ...state.array]\n            }\n        case SET_CURRENT_PAGE:\n            return {...state, currentPage: action.pageNumber}\n\n        case SET_MODAL_FOR_NEW_CONTACT: {\n            return {...state, modalForNewContact: action.value}\n        }\n\n        default:\n            return state\n    }\n}\n\nexport const setCurrentPageAC = (pageNumber: number): SetCurrentPageACType => ({type: SET_CURRENT_PAGE, pageNumber})\nexport const setNewArrAC = (array: Array<defArrType>): setNewArrACType => ({type: SET_NEW_ARR, array})\nexport const setInputAC = (value: SearchinType): setInputACType => ({type: SET_INPUT, value})\nexport const setAddNewContactAC = (newContact: newContactType): SetAddNewContactACType => ({\n    type: SET_ADD_NEW_CONTACT,\n    newContact\n})\nexport const setModalForNewContactAC = (value: boolean): SetModalForNewContactACType => ({\n    type: SET_MODAL_FOR_NEW_CONTACT,\n    value\n})\n\n\n\n\ntype SetCurrentPageACType = {\n    type: typeof SET_CURRENT_PAGE\n    pageNumber: number\n}\n\n\n\ntype SetModalForNewContactACType = {\n    type: typeof SET_MODAL_FOR_NEW_CONTACT\n    value: boolean\n}\n\ntype SetAddNewContactACType = {\n    type: typeof SET_ADD_NEW_CONTACT\n    newContact: newContactType\n\n}\ntype newContactType = {\n    dataCreated: string\n    name: string\n    position: string\n    email: string,\n    password: string\n    tel: string,\n}\n\n\ntype setNewArrACType = {\n    type: typeof SET_NEW_ARR\n    array: Array<defArrType>\n}\n\ntype setInputACType = {\n    type: typeof SET_INPUT\n    value: SearchinType\n}\n\ntype AllACTypes =\n    | setNewArrACType\n    | setInputACType\n    | SetAddNewContactACType\n    | SetModalForNewContactACType\n    | SetCurrentPageACType\n\n\nexport const SET_NEW_ARR = \"SET_NEW_ARR\"\nexport const SET_INPUT = \"SET_INPUT\"\nexport const SET_ADD_NEW_CONTACT = \"SET_ADD_NEW_CONTACT\"\nexport const SET_MODAL_FOR_NEW_CONTACT = \"SET_MODAL_FOR_NEW_CONTACT\"\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\n\n\n\nexport type InitialStateType = {\n    array: Array<defArrType>\n    input: SearchinType,\n    modalForNewContact: boolean\n    currentPage: number,\n    postPerPage: number,\n}\n\nexport type defArrType = {\n    \"id\": number,\n    \"name\": string,\n    \"position\": string\n    \"email\": string,\n    \"tel\": string\n    \"dataCreated\": string\n    \"password\": string\n}\n\n\n\n\n\n\n\n","import {defArrType} from \"./Redux/table-reducer\";\n\nexport let defArr: Array<defArrType> = [\n    {\n        \"id\": 1,\n        \"name\": \"Albert\",\n        'position': \"Manager\",\n        \"email\": \"Albert@gmail.com\",\n        \"tel\": \"89522003030\",\n        \"dataCreated\": '12/12/2020',\n        \"password\": '777'\n    },\n\n    {\n        \"id\": 2,\n        \"name\": \"Evgeny\",\n        'position': \"Manager\",\n        \"email\": \"Commander@gmail.com\",\n        \"tel\": \"89522002020\",\n        \"dataCreated\": '12/12/2019',\n        \"password\": '777'\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Ysance\",\n        'position': \"Manager\",\n        \"email\": \"Ysance@gmail.com\",\n        \"tel\": \"89502003030\",\n        \"dataCreated\": '12/12/2019',\n        \"password\": '777'\n    },\n    {\n        \"id\": 4,\n        \"name\": \"Elena\",\n        'position': \"Specialist\",\n        \"email\": \"Internet@gmail.com\",\n        \"tel\": \"89022001030\",\n        \"dataCreated\": '12/12/2019',\n        \"password\": '777'\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Violetta\",\n        'position': \"Specialist\",\n        \"email\": \"yandex@gmail.com\",\n        \"tel\": \"89002003030\",\n        \"dataCreated\": '12/12/2019',\n\n        \"password\": '777'\n    },\n    {\n        \"id\": 6,\n        \"name\": \"Angelika\",\n        'position': \"Specialist\",\n        \"email\": \"yandex@gmail.com\",\n        \"tel\": \"89112003030\",\n        \"dataCreated\": '12/12/2019',\n        \"password\": '777'\n    },\n    {\n        \"id\": 7,\n        \"name\": \"Vasylii\",\n        'position': \"Specialist\",\n        \"email\": \"Vasylii@gmail.com\",\n        \"tel\": \"89095553030\",\n        \"dataCreated\": '12/12/2019',\n        \"password\": '777'\n    },\n    {\n        \"id\": 8,\n        \"name\": \"Tealium\",\n        'position': \"Specialist\",\n        \"email\": \"Tealium@gmail.com\",\n        \"tel\": \"89502663030\",\n        \"dataCreated\": '12/12/2019',\n        \"password\": '777'\n    },\n    {\n        \"id\": 9,\n        \"name\": \"Emarsys\",\n        'position': \"Developer\",\n        \"email\": \"Emarsys@gmail.com\",\n        \"tel\": \"89992003999\",\n        \"dataCreated\": '12/12/2019',\n        \"password\": '777'\n    },\n    {\n        \"id\": 10,\n        \"name\": \"Expsaert\",\n        'position': \"Developer\",\n        \"email\": \"Expsaert@gmail.com\",\n        \"tel\": \"89002008888\",\n        \"dataCreated\": '12/12/2019',\n        \"password\": '777'\n    },\n    {\n        \"id\": 11,\n        \"name\": \"John\",\n        'position': \"Developer\",\n        \"email\": \"John@gmail.com\",\n        \"tel\": \"89002009999\",\n        \"dataCreated\": '12/12/2019',\n        \"password\": '777'\n    },\n    {\n        \"id\": 12,\n        \"name\": \"Ysance\",\n        'position': \"HR\",\n        \"email\": \"Ysance@gmail.com\",\n        \"tel\": \"89002005088\",\n        \"dataCreated\": '12/12/2019',\n        \"password\": '777'\n    },\n    {\n        \"id\": 13,\n        \"name\": \"Robert\",\n        'position': \"HR\",\n        \"email\": \"Robert@gmail.com\",\n        \"tel\": \"89998008888\",\n        \"dataCreated\": '12/12/2019',\n        \"password\": '777'\n    },\n    {\n        \"id\": 14,\n        \"name\": \"Timur\",\n        'position': \"HR\",\n        \"email\": \"Timur@gmail.com\",\n        \"tel\": \"89009808888\",\n        \"dataCreated\": '12/12/2019',\n        \"password\": '777'\n    },\n    {\n        \"id\": 15,\n        \"name\": \"Roland\",\n        'position': \"Sales specilaist\",\n        \"email\": \"Roland@gmail.com\",\n        \"tel\": \"89532008888\",\n        \"dataCreated\": '12/12/2019',\n        \"password\": '777'\n    },\n    {\n        \"id\":16,\n        \"name\": \"Franc\",\n        'position': \"Sales specilaist\",\n        \"email\": \"Franc@gmail.com\",\n        \"tel\": \"89852008888\",\n        \"dataCreated\": '12/12/2019',\n        \"password\": '777'\n    },\n    {\n        \"id\": 17,\n        \"name\": \"Tewlum\",\n        'position': \"Sales specilaist\",\n        \"email\": \"Tewlum@gmail.com\",\n        \"tel\": \"89382008888\",\n        \"dataCreated\": '12/12/2019',\n        \"password\": '777'\n    },\n    {\n        \"id\": 18,\n        \"name\": \"Emarsysnk\",\n        'position': \"Sales specilaist\",\n        \"email\": \"Emarsysnk@gmail.com\",\n        \"tel\": \"89009995888\",\n        \"dataCreated\": '12/12/2019',\n        \"password\": '777'\n    }\n]","import React from \"react\";\nimport Modal from \"react-modal\";\nimport style from \"./NewContact.module.css\";\nimport {\n    Button,\n    MenuItem,\n    TextField,\n} from \"@material-ui/core\";\nimport {setAddNewContactAC, setModalForNewContactAC} from \"../../Redux/table-reducer\";\nimport {useDispatch} from \"react-redux\";\nimport {ContType} from \"../TableBigListOfContacts\";\n\ntype NewContactPropsType = {\n    modalForNewContact: boolean\n    customStyles: any\n    cont: ContType\n    setCont: ({}: ContType) => void\n}\n\n\nconst positions = [\n    {\n        value: 'Manager',\n        label: 'manager',\n    },\n    {\n        value: 'Specialist',\n        label: 'Specialist',\n    },\n    {\n        value: 'developer',\n        label: 'Developer',\n    },\n    {\n        value: 'HR',\n        label: 'HR',\n    },\n    {\n        value: 'Sales specilaist',\n        label: 'Sales specilaist',\n    },\n];\n\n\nexport const NewContact = (props: NewContactPropsType) => {\n    const dispatch = useDispatch()\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        props.setCont({\n            ...props.cont,\n            position: event.target.value\n        })\n    };\n    return (\n        <Modal\n            isOpen={props.modalForNewContact}\n            style={props.customStyles}\n            contentLabel=\"Example Modal\"\n        >\n\n\n            <div className={style.info}>\n                <div className={style.btnContainer}>\n                    <button className={style.btnClose}\n                            onClick={() => {\n                                dispatch(setModalForNewContactAC(false))\n                            }}>X\n                    </button>\n                </div>\n                <div className={style.par}>\n                    <h3>Добавление данных о экспертах по оценке и руководителей</h3>\n                </div>\n\n                <div className={style.textFiledContainer}>\n\n                    <TextField\n                        color=\"primary\"\n                        className={style.textFields}\n                        type={'text'}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        label=\"Дата регистрации\"\n                        placeholder={\"data\"}\n                        value={props.cont.dataCreated}\n                        onChange={(e) => {\n                            props.setCont({\n                                ...props.cont,\n                                dataCreated: e.target.value\n                            })\n                        }}/>\n                    <TextField\n                        color=\"primary\"\n                        className={style.textFields}\n                        type={'text'}\n                        variant=\"outlined\"\n                        label=\"ФИО\"\n                        margin=\"normal\"\n                        placeholder={\"ФИО\"}\n                        value={props.cont.name}\n                        onChange={(e) => {\n                            props.setCont({\n                                ...props.cont,\n                                name: e.target.value\n                            })\n                        }}/>\n\n                    <TextField\n                        color=\"primary\"\n                        className={style.textFields}\n                        id=\"standard-select-currency\"\n                        select\n                        label=\"Должность\"\n                        // value={currency}\n                        value={props.cont.position}\n                        onChange={handleChange}\n                        helperText=\"Введите должность\"\n                    >\n                        {positions.map((option) => (\n                            <MenuItem key={option.value} value={option.value}>\n                                {option.label}\n                            </MenuItem>\n                        ))}\n                    </TextField>\n\n\n                    <TextField\n                        color=\"primary\"\n                        className={style.textFields}\n                        type={'text'}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        label=\"Почта (логин)\"\n                        placeholder={\"Email\"}\n                        value={props.cont.email}\n                        onChange={(e) => {\n                            props.setCont({\n                                ...props.cont,\n                                email: e.target.value\n                            })\n                        }}/>\n                    <TextField\n                        color=\"primary\"\n                        className={style.textFields}\n                        type={'text'}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        label=\"Пароль\"\n                        value={props.cont.password}\n                        placeholder={\"Пароль\"}\n                        onChange={(e) => {\n                            props.setCont({\n                                ...props.cont,\n                                password: e.target.value\n                            })\n                        }}/>\n                    <TextField\n                        color=\"primary\"\n                        className={style.textFields}\n                        type={'text'}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        label=\"Телефон, привязанный к мессенджеру\"\n                        value={props.cont.tel}\n                        placeholder={\"Phone\"}\n                        onChange={(e) => {\n                            props.setCont({\n                                ...props.cont,\n                                tel: e.target.value\n                            })\n                        }}/>\n\n\n                    <Button\n                        className={style.btn}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={(props.cont.name.length > 0) && props.cont.email.length > 0 && props.cont.tel.length > 0 ? false : true}\n                        onClick={() => {\n                            dispatch(setAddNewContactAC(props.cont))\n                            dispatch(setModalForNewContactAC(false))\n                        }}>\n                        ADD\n                    </Button>\n                </div>\n\n\n            </div>\n\n        </Modal>\n    )\n}","import React, {useState} from \"react\";\nimport style from './Pagination.module.css'\nimport {Button} from \"@material-ui/core\";\n\ntype PaginatorPropsType = {\n    postsPerPage: number\n    totalPosts: number\n    paginate: (pageNumber: number) => void\n}\n\nexport const Paginator = (props: PaginatorPropsType) => {\n    const [portionNumber, setPortionNumber] = useState(1)\n    const portionCount = props.totalPosts / props.postsPerPage\n    const pageNumbers = []\n    for (let i = 1; i <= Math.ceil(props.totalPosts / props.postsPerPage); i++) {\n        pageNumbers.push(i)\n    }\n    let leftPortionPageNumber = (portionNumber - 1) * props.postsPerPage + 1\n    let rightPortionPageNumber = portionNumber * props.postsPerPage\n    return (\n        <nav>\n            <ul className='pagination'>\n                {portionNumber > 1 && <Button color=\"primary\" onClick={() => {\n                    setPortionNumber(portionNumber - 1)\n                }}>Prev</Button>}\n                {pageNumbers.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n                    .map(number => (\n                        <span key={number} className=\"page-item\">\n            <a onClick={() => props.paginate(number)} className={style.page}>\n                {number}\n            </a>\n        </span>\n                    ))}\n                {(portionCount > portionNumber && portionCount > 10) &&\n                <Button color=\"primary\" onClick={() => {\n                    setPortionNumber(portionNumber + 1)\n                }}>Next</Button>\n                }\n\n            </ul>\n        </nav>\n    )\n}","import React from \"react\";\n\nimport style from \"./Search.module.css\";\n\nimport {Button, TextField} from \"@material-ui/core\";\nimport {SearchinType, setInputAC} from \"../../Redux/table-reducer\";\nimport {useDispatch} from \"react-redux\";\n\n\ntype HeaderPropsType = {\n    input: SearchinType\n    setValue: (value: SearchinType) => void\n}\n\nexport const Search = (props: HeaderPropsType) => {\n    const dispatch = useDispatch()\n\n\n    return (\n        <div className={style.info}>\n            <h3>Список экспертов по оценке руководителей</h3>\n            <div className={style.container}>\n\n                <div className={style.boxes}>\n\n\n                    <TextField\n                        className={style.textFields}\n                        type={'text'}\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        label=\"ID\"\n                        placeholder={\"Введите ID\"}\n                        value={props.input.id}\n                        onChange={(e: any) => {\n                            dispatch(setInputAC({\n                                ...props.input,\n                                id: e.currentTarget.value\n                            }))\n                        }}\n                        onKeyPress={(e: any) => {\n                            if (e.key === 'Enter') {\n                                props.setValue(props.input)\n                            }\n                        }}\n\n                    />\n                    <TextField\n                        className={style.textFields}\n                        type={'text'}\n                               variant=\"outlined\"\n                               margin=\"normal\"\n                               label=\"ФИО\"\n                               placeholder={\"Введите ФИО участника\"}\n                               value={props.input.name}\n                               onChange={(e) => {\n                                   dispatch(setInputAC({\n                                       ...props.input,\n                                       name: e.currentTarget.value\n                                   }))\n                               }}\n                               onKeyPress={(e: any) => {\n                                   if (e.key === 'Enter') {\n                                       props.setValue(props.input)\n                                   }\n                               }}\n                    />\n                    <TextField\n                        className={style.textFields}\n                        type={'text'}\n                               variant=\"outlined\"\n                               margin=\"normal\"\n                               label=\"Должность\"\n                               placeholder={\"Введите должность участника\"}\n                               value={props.input.position}\n                               onChange={(e) => {\n                                   dispatch(setInputAC({\n                                       ...props.input,\n                                       position: e.currentTarget.value\n                                   }))\n                               }}\n                               onKeyPress={(e: any) => {\n                                   if (e.key === 'Enter') {\n                                       props.setValue(props.input)\n                                   }\n                               }}\n                    />\n                    <TextField\n                        className={style.textFields}\n                        type={'text'}\n                               variant=\"outlined\"\n                               margin=\"normal\"\n                               label=\"Почта (логин)\"\n                               placeholder={\"Введите почту/логин участника\"}\n                               value={props.input.email}\n                               onChange={(e) => {\n                                   dispatch(setInputAC({\n                                       ...props.input,\n                                       email: e.currentTarget.value\n                                   }))\n                               }}\n                               onKeyPress={(e: any) => {\n                                   if (e.key === 'Enter') {\n                                       props.setValue(props.input)\n                                   }\n                               }}\n                    />\n\n\n                    <Button\n                        className={style.btn}\n                        color=\"primary\"\n                        variant='contained'\n                        onClick={() => {\n                        props.setValue(props.input)\n                    }}>Найти</Button>\n                </div>\n\n            </div>\n        </div>\n\n    )\n}","import React, {useState} from \"react\";\nimport style from './Table.module.css'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootStateType} from \"../Redux/Store\";\nimport {\n    defArrType,\n    setModalForNewContactAC,\n    setNewArrAC, setCurrentPageAC, SearchinType\n} from \"../Redux/table-reducer\";\nimport {Button} from \"@material-ui/core\";\n\nimport {NewContact} from \"./newContact/NewContact\";\nimport {Paginator} from \"../paginator/Pagination\";\nimport {Search} from \"./Search/Search\";\n\n\nconst customStyles = {\n    content: {\n        width: '750px',\n        height: '750px',\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n        zindex: '9999'\n\n    },\n};\n\n\nexport const TableBigListOfContacts = () => {\n    const dispatch = useDispatch()\n    const input = useSelector<RootStateType, SearchinType>(state => state.table.input)\n    const [cont, setCont] = useState<ContType>({\n        dataCreated: '',\n        name: '',\n        email: '',\n        tel: '',\n        password: '',\n        position: ''\n    })\n    const modalForNewContact = useSelector<RootStateType, boolean>(state => state.table.modalForNewContact)\n    const currentPage = useSelector<RootStateType, number>(state => state.table.currentPage)\n    const postPerPage = useSelector<RootStateType, number>(state => state.table.postPerPage)\n    const array = useSelector<RootStateType, Array<defArrType>>(state => state.table.array)\n    const [newArr] = useState(array)\n\n\n\n    //searching contact\n    const setValue = (value: SearchinType) => {\n        if (input.id) {\n            let newFilteredArr = array.filter(el => el.id === Number(value.id))\n            dispatch(setNewArrAC(newFilteredArr))\n        } else if (input.name.length >= 1) {\n            debugger\n            let filteredContacts = (array.filter((i: defArrType) => {\n                let matchNames = i.name.toLowerCase()\n                return matchNames.match(value.name)\n            }))\n            dispatch(setNewArrAC(filteredContacts))\n        } else if (input.position.length >= 1) {\n            let filteredContacts = (array.filter((i: defArrType) => {\n                let matchNames = i.position.toLowerCase()\n                return matchNames.match(value.position)\n            }))\n            dispatch(setNewArrAC(filteredContacts))\n        } else if (input.email.length >= 1) {\n            let filteredContacts = (array.filter((i: defArrType) => {\n                let matchNames = i.email.toLowerCase()\n                return matchNames.match(value.email)\n            }))\n            dispatch(setNewArrAC(filteredContacts))\n        }\n        if (Number(value.id) === 0 && (value.email.length === 0) && (value.name.length === 0) && (value.position.length === 0)\n        ) {\n            dispatch(setNewArrAC(newArr))\n        }\n    }\n\n\n    //getCurrent contact\n    const indexOfLastPost = currentPage * postPerPage;\n    const indexOfFirstPost = indexOfLastPost - postPerPage\n    const currentPost = array.slice(indexOfFirstPost, indexOfLastPost)\n\n    //set contact\n    const paginate = (pageNumber: number) => {\n        dispatch(setCurrentPageAC(pageNumber))\n    }\n\n    return (\n        <div className={style.container}>\n\n            <Search input={input} setValue={setValue}/>\n\n            <NewContact\n                modalForNewContact={modalForNewContact}\n                customStyles={customStyles}\n                cont={cont}\n                setCont={setCont}\n            />\n            <div className={style.newClassName}>\n                <div className={style.tableForHover}>\n                    <div className={style.myTableHeader}>\n                        <div className={style.box1}>\n                            <p className={style.headerName}>\n                                Id\n                            </p>\n                        </div>\n                        <div className={style.box2}>\n                            <p className={style.headerName}>Дата регистрации</p>\n                        </div>\n                        <div className={style.box3}>\n                            <p className={style.headerName}>ФИО</p>\n                        </div>\n                        <div className={style.box4}>\n                            <p className={style.headerName}>Должность</p>\n                        </div>\n                        <div className={style.box5}>\n                            <p className={style.headerName}>Почта (логин)</p>\n                        </div>\n                        <div className={style.box6}>\n                            <p className={style.headerName}>Пароль</p>\n                        </div>\n                        <div className={style.box7}>\n                            <p className={style.headerName}>Телефон, привязанный к мессенджеру</p>\n                        </div>\n                    </div>\n                    {currentPost.map((el: defArrType) => {\n                        return (\n                            <div className={style.myTable} key={el.id}>\n                                <div className={style.box1}>\n                                    <p>{el.id}</p>\n                                </div>\n                                <div className={style.box2}>\n                                    <p>{el.dataCreated}</p>\n                                </div>\n                                <div className={style.box3}>\n                                    <p>{el.name}</p>\n                                </div>\n                                <div className={style.box4}>\n                                    <p>{el.position}</p>\n\n                                </div>\n                                <div className={style.box5}>\n                                    <p className={style.emailInfo}>{el.email}</p>\n                                </div>\n                                <div className={style.box6}>\n                                    <p>{el.password}</p>\n                                </div>\n                                <div className={style.box7}>\n                                    <p>{el.tel}</p>\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n\n            </div>\n            <div className={style.footer}>\n                <div className={style.paginator}>\n                    <Paginator postsPerPage={postPerPage} totalPosts={array.length}\n                               paginate={paginate}/>\n                </div>\n\n                <Button\n                    className={style.btnAddCont}\n                    variant='contained'\n                    color=\"primary\"\n                    onClick={() => {\n                        dispatch(setModalForNewContactAC(true))\n                    }}>Добавить Контакт\n                </Button>\n            </div>\n\n        </div>)\n}\n\nexport type ContType = {\n    dataCreated: string\n    name: string,\n    email: string,\n    password: string\n    position: string\n    tel: string,\n}\n","import './App.module.css';\nimport React from \"react\";\nimport styles from './App.module.css'\nimport {TableBigListOfContacts} from \"./Components/Table/TableBigListOfContacts\";\n\nfunction App() {\n\n    return (\n        <div className={styles.App}>\n            <div className={styles.newContainer}>\n                <TableBigListOfContacts/>\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers, createStore} from 'redux';\n\nimport {tableReducer} from \"./table-reducer\";\n\n\n\nconst reducers = combineReducers({\n    table: tableReducer,\n})\n\n\nexport const store = createStore(reducers)\nexport type RootStateType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store;\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./Components/Redux/Store\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n    <App />\n        </Provider>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}